(function() {var implementors = {
"eiffelvis":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"eiffelvis/struct.Cli.html\" title=\"struct eiffelvis::Cli\">Cli</a>",1,["eiffelvis::Cli"]]],
"eiffelvis_core":[["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseData.html\" title=\"struct eiffelvis_core::domain::types::BaseData\">BaseData</a>",1,["eiffelvis_core::domain::types::BaseData"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseMeta.html\" title=\"struct eiffelvis_core::domain::types::BaseMeta\">BaseMeta</a>",1,["eiffelvis_core::domain::types::BaseMeta"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.MetaSource.html\" title=\"struct eiffelvis_core::domain::types::MetaSource\">MetaSource</a>",1,["eiffelvis_core::domain::types::MetaSource"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseLink.html\" title=\"struct eiffelvis_core::domain::types::BaseLink\">BaseLink</a>",1,["eiffelvis_core::domain::types::BaseLink"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseEvent.html\" title=\"struct eiffelvis_core::domain::types::BaseEvent\">BaseEvent</a>",1,["eiffelvis_core::domain::types::BaseEvent"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.LeanEvent.html\" title=\"struct eiffelvis_core::domain::types::LeanEvent\">LeanEvent</a>",1,["eiffelvis_core::domain::types::LeanEvent"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/user_queries/struct.Query.html\" title=\"struct eiffelvis_core::domain::user_queries::Query\">Query</a>",1,["eiffelvis_core::domain::user_queries::Query"]],["impl Freeze for <a class=\"enum\" href=\"eiffelvis_core/domain/user_queries/enum.RangeFilterBound.html\" title=\"enum eiffelvis_core::domain::user_queries::RangeFilterBound\">RangeFilterBound</a>",1,["eiffelvis_core::domain::user_queries::RangeFilterBound"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/user_queries/struct.EventFilterMeta.html\" title=\"struct eiffelvis_core::domain::user_queries::EventFilterMeta\">EventFilterMeta</a>",1,["eiffelvis_core::domain::user_queries::EventFilterMeta"]],["impl Freeze for <a class=\"enum\" href=\"eiffelvis_core/domain/user_queries/enum.EventFilter.html\" title=\"enum eiffelvis_core::domain::user_queries::EventFilter\">EventFilter</a>",1,["eiffelvis_core::domain::user_queries::EventFilter"]],["impl Freeze for <a class=\"enum\" href=\"eiffelvis_core/domain/user_queries/enum.Collection.html\" title=\"enum eiffelvis_core::domain::user_queries::Collection\">Collection</a>",1,["eiffelvis_core::domain::user_queries::Collection"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/user_queries/struct.TrackedQuery.html\" title=\"struct eiffelvis_core::domain::user_queries::TrackedQuery\">TrackedQuery</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["eiffelvis_core::domain::user_queries::TrackedQuery"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.ChunkedIndex.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::ChunkedIndex\">ChunkedIndex</a>",1,["eiffelvis_core::graph_storage::chunked_storage::ChunkedIndex"]],["impl&lt;K, N, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.ChunkedGraph.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::ChunkedGraph\">ChunkedGraph</a>&lt;K, N, E&gt;",1,["eiffelvis_core::graph_storage::chunked_storage::ChunkedGraph"]],["impl&lt;N, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.Element.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::Element\">Element</a>&lt;N, E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,</span>",1,["eiffelvis_core::graph_storage::chunked_storage::Element"]],["impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.NodeData.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::NodeData\">NodeData</a>&lt;N&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,</span>",1,["eiffelvis_core::graph_storage::chunked_storage::NodeData"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.EdgeData.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::EdgeData\">EdgeData</a>&lt;E&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,</span>",1,["eiffelvis_core::graph_storage::chunked_storage::EdgeData"]],["impl&lt;'a, K, N, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.NodeIter.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::NodeIter\">NodeIter</a>&lt;'a, K, N, E&gt;",1,["eiffelvis_core::graph_storage::chunked_storage::NodeIter"]],["impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.EdgeIter.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::EdgeIter\">EdgeIter</a>&lt;'a, E&gt;",1,["eiffelvis_core::graph_storage::chunked_storage::EdgeIter"]],["impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/query/struct.SubGraphs.html\" title=\"struct eiffelvis_core::query::SubGraphs\">SubGraphs</a>&lt;'a, G&gt;",1,["eiffelvis_core::query::SubGraphs"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedNodes.html\" title=\"struct eiffelvis_core::tracked_query::TrackedNodes\">TrackedNodes</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["eiffelvis_core::tracked_query::TrackedNodes"]],["impl&lt;'a, I, G&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedNodesIter.html\" title=\"struct eiffelvis_core::tracked_query::TrackedNodesIter\">TrackedNodesIter</a>&lt;'a, I, G&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"eiffelvis_core/graph/trait.HasNodeRangeIter.html\" title=\"trait eiffelvis_core::graph::HasNodeRangeIter\">HasNodeRangeIter</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.65.0/std/primitive.reference.html\">&amp;'a </a>G&gt;&gt;::<a class=\"associatedtype\" href=\"eiffelvis_core/graph/trait.HasNodeRangeIter.html#associatedtype.NodeRangeIterType\" title=\"type eiffelvis_core::graph::HasNodeRangeIter::NodeRangeIterType\">NodeRangeIterType</a>: Freeze,</span>",1,["eiffelvis_core::tracked_query::TrackedNodesIter"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedSubGraphs.html\" title=\"struct eiffelvis_core::tracked_query::TrackedSubGraphs\">TrackedSubGraphs</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["eiffelvis_core::tracked_query::TrackedSubGraphs"]],["impl&lt;'a, I, G&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedSubGraphsIter.html\" title=\"struct eiffelvis_core::tracked_query::TrackedSubGraphsIter\">TrackedSubGraphsIter</a>&lt;'a, I, G&gt;",1,["eiffelvis_core::tracked_query::TrackedSubGraphsIter"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.OwnedBounds.html\" title=\"struct eiffelvis_core::tracked_query::OwnedBounds\">OwnedBounds</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["eiffelvis_core::tracked_query::OwnedBounds"]]],
"eiffelvis_gen":[["impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.EventSet.html\" title=\"struct eiffelvis_gen::event_set::EventSet\">EventSet</a>",1,["eiffelvis_gen::event_set::EventSet"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.Link.html\" title=\"struct eiffelvis_gen::event_set::Link\">Link</a>",1,["eiffelvis_gen::event_set::Link"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.Event.html\" title=\"struct eiffelvis_gen::event_set::Event\">Event</a>",1,["eiffelvis_gen::event_set::Event"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.EventSetBuilder.html\" title=\"struct eiffelvis_gen::event_set::EventSetBuilder\">EventSetBuilder</a>",1,["eiffelvis_gen::event_set::EventSetBuilder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.EventBorrow.html\" title=\"struct eiffelvis_gen::event_set::EventBorrow\">EventBorrow</a>&lt;'a&gt;",1,["eiffelvis_gen::event_set::EventBorrow"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.LinkBorrow.html\" title=\"struct eiffelvis_gen::event_set::LinkBorrow\">LinkBorrow</a>&lt;'a&gt;",1,["eiffelvis_gen::event_set::LinkBorrow"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/generator/struct.EventGenerator.html\" title=\"struct eiffelvis_gen::generator::EventGenerator\">EventGenerator</a>",1,["eiffelvis_gen::generator::EventGenerator"]],["impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"eiffelvis_gen/generator/struct.Iter.html\" title=\"struct eiffelvis_gen::generator::Iter\">Iter</a>&lt;'a&gt;",1,["eiffelvis_gen::generator::Iter"]],["impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/eiffel_vocabulary/struct.EiffelVocabulary.html\" title=\"struct eiffelvis_gen::eiffel_vocabulary::EiffelVocabulary\">EiffelVocabulary</a>",1,["eiffelvis_gen::eiffel_vocabulary::EiffelVocabulary"]]],
"eiffelvis_stream":[["impl Freeze for <a class=\"struct\" href=\"eiffelvis_stream/ampq/struct.AmpqStream.html\" title=\"struct eiffelvis_stream::ampq::AmpqStream\">AmpqStream</a>",1,["eiffelvis_stream::ampq::AmpqStream"]]],
"event_sender":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.65.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"event_sender/struct.Cli.html\" title=\"struct event_sender::Cli\">Cli</a>",1,["event_sender::Cli"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()