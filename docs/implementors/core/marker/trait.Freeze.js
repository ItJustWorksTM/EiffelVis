(function() {var implementors = {};
implementors["eiffelvis"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"eiffelvis/struct.Cli.html\" title=\"struct eiffelvis::Cli\">Cli</a>","synthetic":true,"types":["eiffelvis::Cli"]}];
implementors["eiffelvis_core"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseData.html\" title=\"struct eiffelvis_core::domain::types::BaseData\">BaseData</a>","synthetic":true,"types":["eiffelvis_core::domain::types::BaseData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseMeta.html\" title=\"struct eiffelvis_core::domain::types::BaseMeta\">BaseMeta</a>","synthetic":true,"types":["eiffelvis_core::domain::types::BaseMeta"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseLink.html\" title=\"struct eiffelvis_core::domain::types::BaseLink\">BaseLink</a>","synthetic":true,"types":["eiffelvis_core::domain::types::BaseLink"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.BaseEvent.html\" title=\"struct eiffelvis_core::domain::types::BaseEvent\">BaseEvent</a>","synthetic":true,"types":["eiffelvis_core::domain::types::BaseEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/types/struct.LeanEvent.html\" title=\"struct eiffelvis_core::domain::types::LeanEvent\">LeanEvent</a>","synthetic":true,"types":["eiffelvis_core::domain::types::LeanEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/user_queries/struct.Query.html\" title=\"struct eiffelvis_core::domain::user_queries::Query\">Query</a>","synthetic":true,"types":["eiffelvis_core::domain::user_queries::Query"]},{"text":"impl Freeze for <a class=\"enum\" href=\"eiffelvis_core/domain/user_queries/enum.Filter.html\" title=\"enum eiffelvis_core::domain::user_queries::Filter\">Filter</a>","synthetic":true,"types":["eiffelvis_core::domain::user_queries::Filter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"eiffelvis_core/domain/user_queries/enum.Collection.html\" title=\"enum eiffelvis_core::domain::user_queries::Collection\">Collection</a>","synthetic":true,"types":["eiffelvis_core::domain::user_queries::Collection"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/domain/user_queries/struct.TrackedQuery.html\" title=\"struct eiffelvis_core::domain::user_queries::TrackedQuery\">TrackedQuery</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::domain::user_queries::TrackedQuery"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.ChunkedIndex.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::ChunkedIndex\">ChunkedIndex</a>","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::ChunkedIndex"]},{"text":"impl&lt;K, N, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.ChunkedGraph.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::ChunkedGraph\">ChunkedGraph</a>&lt;K, N, E&gt;","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::ChunkedGraph"]},{"text":"impl&lt;N, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.Element.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::Element\">Element</a>&lt;N, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::Element"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.NodeData.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::NodeData\">NodeData</a>&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::NodeData"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.EdgeData.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::EdgeData\">EdgeData</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::EdgeData"]},{"text":"impl&lt;'a, K, N, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.NodeIter.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::NodeIter\">NodeIter</a>&lt;'a, K, N, E&gt;","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::NodeIter"]},{"text":"impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/graph_storage/chunked_storage/struct.EdgeIter.html\" title=\"struct eiffelvis_core::graph_storage::chunked_storage::EdgeIter\">EdgeIter</a>&lt;'a, E&gt;","synthetic":true,"types":["eiffelvis_core::graph_storage::chunked_storage::EdgeIter"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/query/struct.SubGraphs.html\" title=\"struct eiffelvis_core::query::SubGraphs\">SubGraphs</a>&lt;'a, G&gt;","synthetic":true,"types":["eiffelvis_core::query::SubGraphs"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedNodes.html\" title=\"struct eiffelvis_core::tracked_query::TrackedNodes\">TrackedNodes</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::tracked_query::TrackedNodes"]},{"text":"impl&lt;'a, I, G&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedNodesIter.html\" title=\"struct eiffelvis_core::tracked_query::TrackedNodesIter\">TrackedNodesIter</a>&lt;'a, I, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as <a class=\"trait\" href=\"eiffelvis_core/graph/trait.HasNodeIter.html\" title=\"trait eiffelvis_core::graph::HasNodeIter\">HasNodeIter</a>&lt;'a, &lt;G as <a class=\"trait\" href=\"eiffelvis_core/graph/trait.HasNode.html\" title=\"trait eiffelvis_core::graph::HasNode\">HasNode</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.reference.html\">&amp;'a </a>G&gt;&gt;::<a class=\"type\" href=\"eiffelvis_core/graph/trait.HasNode.html#associatedtype.NodeType\" title=\"type eiffelvis_core::graph::HasNode::NodeType\">NodeType</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.reference.html\">&amp;'a </a>G&gt;&gt;::<a class=\"type\" href=\"eiffelvis_core/graph/trait.HasNodeIter.html#associatedtype.NodeIterType\" title=\"type eiffelvis_core::graph::HasNodeIter::NodeIterType\">NodeIterType</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::tracked_query::TrackedNodesIter"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedSubGraphs.html\" title=\"struct eiffelvis_core::tracked_query::TrackedSubGraphs\">TrackedSubGraphs</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["eiffelvis_core::tracked_query::TrackedSubGraphs"]},{"text":"impl&lt;'a, I, G&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_core/tracked_query/struct.TrackedSubGraphsIter.html\" title=\"struct eiffelvis_core::tracked_query::TrackedSubGraphsIter\">TrackedSubGraphsIter</a>&lt;'a, I, G&gt;","synthetic":true,"types":["eiffelvis_core::tracked_query::TrackedSubGraphsIter"]}];
implementors["eiffelvis_gen"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.EventSet.html\" title=\"struct eiffelvis_gen::event_set::EventSet\">EventSet</a>","synthetic":true,"types":["eiffelvis_gen::event_set::EventSet"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.Link.html\" title=\"struct eiffelvis_gen::event_set::Link\">Link</a>","synthetic":true,"types":["eiffelvis_gen::event_set::Link"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.Event.html\" title=\"struct eiffelvis_gen::event_set::Event\">Event</a>","synthetic":true,"types":["eiffelvis_gen::event_set::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.EventSetBuilder.html\" title=\"struct eiffelvis_gen::event_set::EventSetBuilder\">EventSetBuilder</a>","synthetic":true,"types":["eiffelvis_gen::event_set::EventSetBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.EventBorrow.html\" title=\"struct eiffelvis_gen::event_set::EventBorrow\">EventBorrow</a>&lt;'a&gt;","synthetic":true,"types":["eiffelvis_gen::event_set::EventBorrow"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"eiffelvis_gen/event_set/struct.LinkBorrow.html\" title=\"struct eiffelvis_gen::event_set::LinkBorrow\">LinkBorrow</a>&lt;'a&gt;","synthetic":true,"types":["eiffelvis_gen::event_set::LinkBorrow"]},{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_gen/generator/struct.EventGenerator.html\" title=\"struct eiffelvis_gen::generator::EventGenerator\">EventGenerator</a>","synthetic":true,"types":["eiffelvis_gen::generator::EventGenerator"]},{"text":"impl&lt;'a&gt; !Freeze for <a class=\"struct\" href=\"eiffelvis_gen/generator/struct.Iter.html\" title=\"struct eiffelvis_gen::generator::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["eiffelvis_gen::generator::Iter"]}];
implementors["eiffelvis_stream"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"eiffelvis_stream/ampq/struct.AmpqStream.html\" title=\"struct eiffelvis_stream::ampq::AmpqStream\">AmpqStream</a>","synthetic":true,"types":["eiffelvis_stream::ampq::AmpqStream"]}];
implementors["event_sender"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"event_sender/struct.Cli.html\" title=\"struct event_sender::Cli\">Cli</a>","synthetic":true,"types":["event_sender::Cli"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()